# Copyright (C) 2007-2016 various contributors (see AUTHORS)
#
# This file is part of Python-EFL.
#
# Python-EFL is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# Python-EFL is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this Python-EFL.  If not, see <http://www.gnu.org/licenses/>.

###############################################
## THIS FILE WILL BE AUTOGENERATED USING EOLIAN
###############################################

from ._efl_ffi import ffi, lib
from ._utils import _to_bytes, _to_unicode
from . import eo
from . import efl


###  module init/shutdown  ####################################################
print("EVAS INIT")
import atexit
lib.evas_init()
atexit.register(lambda: lib.evas_shutdown())


###  enums  ###################################################################
# ELM_WIN_BASIC = lib.ELM_WIN_BASIC


###  module level functions  ##################################################



###  Evas.Object  #############################################################
class Object(eo.Base, efl.Gfx_Base):
    def __init__(self, parent):
        # standard constructor
        eo.Base.__init__(self, lib.EVAS_OBJECT_CLASS, parent, **kargs)
        print("Evas.Object INIT")


###  Evas.Object_Smart  #######################################################
class Object_Smart(Object):
    def __init__(self, *args, **kargs):
        # standard constructor
        eo.Base.__init__(self, lib.EVAS_OBJECT_SMART_CLASS, parent, **kargs)
        print("Evas.Object_Smart INIT")


###  Evas.Signal_Interface  ###################################################
class Signal_Interface(object):
    pass

###  Evas.Clickable_Interface  ################################################

# EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED = lib.EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED
# EVAS_CLICKABLE_INTERFACE_EVENT_PRESSED = lib.EVAS_CLICKABLE_INTERFACE_EVENT_PRESSED

@eo._class_register('Evas.Clickable_Interface')
class Clickable_Interface(Signal_Interface):
    __events = {
      'clicked':        lib.EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED,
      'clicked,double': lib.EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED_DOUBLE,
      'clicked,triple': lib.EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED_TRIPLE,
      'clicked,right':  lib.EVAS_CLICKABLE_INTERFACE_EVENT_CLICKED_RIGHT,
      'pressed':        lib.EVAS_CLICKABLE_INTERFACE_EVENT_PRESSED,
      'unpressed':      lib.EVAS_CLICKABLE_INTERFACE_EVENT_UNPRESSED,
      'longpressed':    lib.EVAS_CLICKABLE_INTERFACE_EVENT_LONGPRESSED,
      'repeated':       lib.EVAS_CLICKABLE_INTERFACE_EVENT_REPEATED,
    }
    pass
